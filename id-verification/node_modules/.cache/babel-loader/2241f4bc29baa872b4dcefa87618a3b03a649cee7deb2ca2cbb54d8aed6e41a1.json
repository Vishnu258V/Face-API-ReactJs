{"ast":null,"code":"var _jsxFileName = \"C:\\\\FaceAPI\\\\id-verification\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport * as faceapi from 'face-api.js';\nimport idCardImage from \"./images/SugunakarRC.png\";\nimport selfieImage from \"./images/sugunakar-without-specs2.jpg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const idCardRef = useRef();\n  const selfieRef = useRef();\n  const idCardCanvasRef = useRef();\n  const selfieCanvasRef = useRef();\n  const [matchResult, setMatchResult] = useState(\"\");\n  useEffect(() => {\n    const loadModelsAndDetectFaces = async () => {\n      try {\n        await faceapi.nets.ssdMobilenetv1.loadFromUri(\"/models\");\n        await faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\");\n        await faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\");\n        const idCardFaceDetection = await detectFace(idCardRef.current, \"ID Card\");\n        const selfieFaceDetection = await detectFace(selfieRef.current, \"Selfie\");\n        if (idCardFaceDetection && selfieFaceDetection) {\n          const distance = faceapi.euclideanDistance(idCardFaceDetection.descriptor, selfieFaceDetection.descriptor);\n          const threshold = 0.6;\n          const match = distance < threshold;\n          setMatchResult(match ? \"The faces match!\" : \"The faces do not match.\");\n\n          // Render detected faces\n          renderFace(idCardRef.current, idCardFaceDetection.detection, idCardCanvasRef);\n          renderFace(selfieRef.current, selfieFaceDetection.detection, selfieCanvasRef);\n        } else {\n          setMatchResult(\"Could not detect faces in both images.\");\n        }\n      } catch (error) {\n        console.error(\"Error in face detection:\", error);\n        setMatchResult(\"An error occurred during face detection.\");\n      }\n    };\n    loadModelsAndDetectFaces();\n  }, []);\n  const detectFace = async (imageRef, imageName) => {\n    try {\n      const detection = await faceapi.detectSingleFace(imageRef, new faceapi.SsdMobilenetv1Options()).withFaceLandmarks().withFaceDescriptor();\n      if (!detection) {\n        console.log(`No face detected in ${imageName} image`);\n      }\n      return detection;\n    } catch (error) {\n      console.error(`Error detecting face in ${imageName} image:`, error);\n      return null;\n    }\n  };\n  const renderFace = (image, detection, canvasRef) => {\n    if (!detection) return;\n    const {\n      x,\n      y,\n      width,\n      height\n    } = detection.box;\n    const canvas = canvasRef.current;\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, x, y, width, height, 0, 0, width, height);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: idCardRef,\n        src: idCardImage,\n        alt: \"ID Card\",\n        style: {\n          maxWidth: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: idCardCanvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: selfieRef,\n        src: selfieImage,\n        alt: \"Selfie\",\n        style: {\n          maxWidth: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: selfieCanvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: matchResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+bGJvVpRy1jrKOEu6Tk1rVbM+pE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","faceapi","idCardImage","selfieImage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","idCardRef","selfieRef","idCardCanvasRef","selfieCanvasRef","matchResult","setMatchResult","loadModelsAndDetectFaces","nets","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","idCardFaceDetection","detectFace","current","selfieFaceDetection","distance","euclideanDistance","descriptor","threshold","match","renderFace","detection","error","console","imageRef","imageName","detectSingleFace","SsdMobilenetv1Options","withFaceLandmarks","withFaceDescriptor","log","image","canvasRef","x","y","width","height","box","canvas","ctx","getContext","drawImage","children","ref","src","alt","style","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/FaceAPI/id-verification/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport * as faceapi from 'face-api.js';\nimport idCardImage from \"./images/SugunakarRC.png\";\nimport selfieImage from \"./images/sugunakar-without-specs2.jpg\";\n\nfunction App() {\n  const idCardRef = useRef();\n  const selfieRef = useRef();\n  const idCardCanvasRef = useRef();\n  const selfieCanvasRef = useRef();\n  const [matchResult, setMatchResult] = useState(\"\");\n\n  useEffect(() => {\n    const loadModelsAndDetectFaces = async () => {\n      try {\n        await faceapi.nets.ssdMobilenetv1.loadFromUri(\"/models\");\n        await faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\");\n        await faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\");\n\n        const idCardFaceDetection = await detectFace(idCardRef.current, \"ID Card\");\n        const selfieFaceDetection = await detectFace(selfieRef.current, \"Selfie\");\n\n        if (idCardFaceDetection && selfieFaceDetection) {\n          const distance = faceapi.euclideanDistance(\n            idCardFaceDetection.descriptor,\n            selfieFaceDetection.descriptor\n          );\n\n          const threshold = 0.6;\n          const match = distance < threshold;\n\n          setMatchResult(match ? \"The faces match!\" : \"The faces do not match.\");\n\n          // Render detected faces\n          renderFace(idCardRef.current, idCardFaceDetection.detection, idCardCanvasRef);\n          renderFace(selfieRef.current, selfieFaceDetection.detection, selfieCanvasRef);\n        } else {\n          setMatchResult(\"Could not detect faces in both images.\");\n        }\n      } catch (error) {\n        console.error(\"Error in face detection:\", error);\n        setMatchResult(\"An error occurred during face detection.\");\n      }\n    };\n\n    loadModelsAndDetectFaces();\n  }, []);\n\n  const detectFace = async (imageRef, imageName) => {\n    try {\n      const detection = await faceapi\n        .detectSingleFace(imageRef, new faceapi.SsdMobilenetv1Options())\n        .withFaceLandmarks()\n        .withFaceDescriptor();\n\n      if (!detection) {\n        console.log(`No face detected in ${imageName} image`);\n      }\n      return detection;\n    } catch (error) {\n      console.error(`Error detecting face in ${imageName} image:`, error);\n      return null;\n    }\n  };\n\n  const renderFace = (image, detection, canvasRef) => {\n    if (!detection) return;\n    const { x, y, width, height } = detection.box;\n    const canvas = canvasRef.current;\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, x, y, width, height, 0, 0, width, height);\n  };\n\n  return (\n    <>\n      <div>\n        <img ref={idCardRef} src={idCardImage} alt=\"ID Card\" style={{maxWidth: '300px'}} />\n        <canvas ref={idCardCanvasRef}></canvas>\n      </div>\n      <div>\n        <img ref={selfieRef} src={selfieImage} alt=\"Selfie\" style={{maxWidth: '300px'}} />\n        <canvas ref={selfieCanvasRef}></canvas>\n      </div>\n      <p>{matchResult}</p>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}