{"ast":null,"code":"var _jsxFileName = \"C:\\\\FaceAPI\\\\id-verification\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport * as faceapi from 'face-api.js';\nimport idCardImage from \"./images/Vishnu_ID_Card.png\"; // Importing image\nimport selfieImage from \"./images/selfie-without-specs.jpg\"; // Importing image\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const idCardRef = useRef();\n  const selfieRef = useRef();\n  const isFirstRender = useRef(true);\n  const [matchResult, setMatchResult] = useState(\"\");\n  const renderFace = async (image, x, y, width, height) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext(\"2d\");\n    context === null || context === void 0 ? void 0 : context.drawImage(image, x, y, width, height, 0, 0, width, height);\n    canvas.toBlob(blob => {\n      image.src = URL.createObjectURL(blob);\n    }, \"image/jpeg\");\n  };\n  useEffect(() => {\n    // Prevent the function from executing on the first render\n    if (isFirstRender.current) {\n      isFirstRender.current = false; // toggle flag after first render/mounting\n      return;\n    }\n    (async () => {\n      // Load models\n      await Promise.all([faceapi.nets.ssdMobilenetv1.loadFromUri(\"/models\"), faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"), faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"), faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"), faceapi.nets.faceExpressionNet.loadFromUri(\"/models\")]);\n\n      // Detect faces\n      const idCardFaceDetection = await faceapi.detectSingleFace(idCardRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n      const selfieFaceDetection = await faceapi.detectSingleFace(selfieRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n\n      // Compare faces\n      if (idCardFaceDetection && selfieFaceDetection) {\n        const distance = faceapi.euclideanDistance(idCardFaceDetection.descriptor, selfieFaceDetection.descriptor);\n        const threshold = 0.6; // Adjust this value as needed\n        const match = distance < threshold;\n        setMatchResult(match ? \"The faces match!\" : \"The faces do not match.\");\n\n        // Render detected faces (optional)\n        renderFace(idCardRef.current, idCardFaceDetection.detection.box);\n        renderFace(selfieRef.current, selfieFaceDetection.detection.box);\n      } else {\n        setMatchResult(\"Could not detect faces in both images.\");\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: idCardRef,\n        src: idCardImage,\n        alt: \"ID card\",\n        style: {\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: selfieRef,\n        src: selfieImage,\n        alt: \"Selfie\",\n        style: {\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-result\",\n      children: matchResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"K1Td5wFEMMIUB9iH9tiOqSlx9O4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","faceapi","idCardImage","selfieImage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","idCardRef","selfieRef","isFirstRender","matchResult","setMatchResult","renderFace","image","x","y","width","height","canvas","document","createElement","context","getContext","drawImage","toBlob","blob","src","URL","createObjectURL","current","Promise","all","nets","ssdMobilenetv1","loadFromUri","tinyFaceDetector","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","idCardFaceDetection","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","selfieFaceDetection","distance","euclideanDistance","descriptor","threshold","match","detection","box","children","className","ref","alt","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/FaceAPI/id-verification/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport * as faceapi from 'face-api.js';\nimport idCardImage from \"./images/Vishnu_ID_Card.png\"; // Importing image\nimport selfieImage from \"./images/selfie-without-specs.jpg\"; // Importing image\n\nfunction App() {\n  const idCardRef = useRef();\n  const selfieRef = useRef();\n  const isFirstRender = useRef(true);\n  const [matchResult, setMatchResult] = useState(\"\");\n\n\n  const renderFace = async (image, x, y, width, height) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext(\"2d\");\n\n    context?.drawImage(image, x, y, width, height, 0, 0, width, height);\n    canvas.toBlob((blob) => {\n      image.src = URL.createObjectURL(blob);\n    }, \"image/jpeg\");\n  };\n\n  useEffect(() => {\n    // Prevent the function from executing on the first render\n    if (isFirstRender.current) {\n      isFirstRender.current = false; // toggle flag after first render/mounting\n      return;\n    }\n\n    (async () => {\n      // Load models\n      await Promise.all([\n        faceapi.nets.ssdMobilenetv1.loadFromUri(\"/models\"),\n        faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\n        faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\n        faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"),\n        faceapi.nets.faceExpressionNet.loadFromUri(\"/models\")\n      ]);\n\n      // Detect faces\n      const idCardFaceDetection = await faceapi\n        .detectSingleFace(idCardRef.current, new faceapi.TinyFaceDetectorOptions())\n        .withFaceLandmarks()\n        .withFaceDescriptor();\n\n      const selfieFaceDetection = await faceapi\n        .detectSingleFace(selfieRef.current, new faceapi.TinyFaceDetectorOptions())\n        .withFaceLandmarks()\n        .withFaceDescriptor();\n\n      // Compare faces\n      if (idCardFaceDetection && selfieFaceDetection) {\n        const distance = faceapi.euclideanDistance(\n          idCardFaceDetection.descriptor,\n          selfieFaceDetection.descriptor\n        );\n\n        const threshold = 0.6; // Adjust this value as needed\n        const match = distance < threshold;\n\n        setMatchResult(match ? \"The faces match!\" : \"The faces do not match.\");\n\n        // Render detected faces (optional)\n        renderFace(idCardRef.current, idCardFaceDetection.detection.box);\n        renderFace(selfieRef.current, selfieFaceDetection.detection.box);\n      } else {\n        setMatchResult(\"Could not detect faces in both images.\");\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <div className=\"gallery\">\n        <img\n          ref={idCardRef}\n          src={idCardImage}\n          alt=\"ID card\"\n          style={{ height: \"auto\" }}\n        />\n      </div>\n\n      <div className=\"gallery\">\n        <img\n          ref={selfieRef}\n          src={selfieImage}\n          alt=\"Selfie\"\n          style={{ height: \"auto\" }}\n        />\n      </div>\n      <div className=\"match-result\">{matchResult}</div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}